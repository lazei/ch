name: test

on:
  #push:
    #branches: [ "main" ]
  #pull_request:
    #branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    env:
       inputs.submodules: ture
    runs-on: ubuntu-latest
    steps:
      - name: clean
        run: |
         for f in $(ls -A); do
          rm -rf $f
         done
      - name: checkout
        run: |
         git config --global --add safe.directory $(pwd)
         git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} .
         
         ref_type=$(echo ${{ github.ref }} | sed -E -n -e 's/^refs\/([^/]*)\/.*$/\1/p')
         ref=$(echo ${{ github.ref }} | sed -E -n -e 's/^refs\/[^/]*\/(.*)$/\1/p')
         
         case $ref_type in
          pull)
            git fetch origin +refs/pull/$ref:refs/remotes/origin/pull/$ref
            ref="origin/pull/$ref"
            ;;
          *)
            ref=${{ github.sha }}
            ;;
         esac
         
         git checkout $ref
         
         if [ "${{  inputs.submodules }}" == "true" ] && [ -f ".gitmodules" ]; then
          sed -E -i -e $'s/^[ \t]*url[ \t]*=[ \t]*git@github.com:([^\/]*\/[^\/]*)[ \t]*$/\turl = https:\/\/${{ github.token }}@github.com\/\\1/g' .gitmodules
          git submodule init
          git submodule update --recursive
         fi
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
